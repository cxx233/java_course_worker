<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd
                        http://www.springframework.org/schema/aop
                        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.cxx.homework.bean" />

    <bean id="book1" class="com.cxx.homework.bean.assemble.Book" primary="true">
        <property name="bookId" value="1"/>
        <property name="bookName" value="myFirstBook"/>
        <property name="version" value="version_1"/>
    </bean>


    <bean id="book2" class="com.cxx.homework.bean.assemble.Book" >
        <property name="bookId" value="2"/>
        <property name="bookName" value="mySecondBook"/>
        <property name="version" value="version_1"/>
    </bean>

    <bean id = "mySchoolBag" class="com.cxx.homework.bean.assemble.SchoolBag" primary="true">
<!--        <constructor-arg type="com.cxx.homework.bean.assemble.Book" ref="book1"/>-->
        <constructor-arg type="com.cxx.homework.bean.assemble.Book" ref="book2"/>
<!--        <constructor-arg>-->
<!--            <list>-->
<!--                <bean id="book1"/>-->
<!--                <bean id="book2"/>-->
<!--            </list>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg>-->
<!--            <bean id="book2"/>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg>-->
<!--            <bean id = "book2"/>-->
<!--        </constructor-arg>-->
    </bean>

    <!--
    <bean id="student123"
          class="com.cxx.example.kimmking.spring01.Student">
        <property name="id" value="123" />
        <property name="name" value="KK123" />
    </bean>

    <bean id="student100"
          class="com.cxx.example.kimmking.spring01.Student">
        <property name="id" value="100" />
        <property name="name" value="KK100" />
    </bean>

    <bean id="class1" class="com.cxx.example.kimmking.spring02.Klass">
        <property name="students">
            <list>
                <ref bean="student100" />
                <ref bean="student123" />
&lt;!&ndash;                <bean class="com.cxx.example.kimmking.spring01.Student">&ndash;&gt;
&lt;!&ndash;                    <property name="name" value="qq" />&ndash;&gt;
&lt;!&ndash;                    <property name="id" value="001" /> &ndash;&gt;
&lt;!&ndash;                </bean>&ndash;&gt;
            </list>
        </property>
    </bean>


    <context:component-scan base-package="com.cxx.example.kimmking.spring02" />


    <bean id="aop1" class="com.cxx.example.kimmking.spring02.Aop1" />

    <bean id="aop2" class="com.cxx.example.kimmking.spring02.Aop2" />

    &lt;!&ndash;开启自动代理-》 Aop2&ndash;&gt;
&lt;!&ndash;    <aop:aspectj-autoproxy proxy-target-class="true" />&ndash;&gt;
    <aop:aspectj-autoproxy  />

    <aop:config>
        <aop:pointcut expression="execution(* com.cxx.example.kimmking.aop.*.*(..))" id="p1" /> &lt;!&ndash;切点&ndash;&gt;
        <aop:aspect ref="aop1"> &lt;!&ndash;切面 &ndash;&gt;
            <aop:around method="around" pointcut-ref="p1" />
            <aop:before method="startTransaction" pointcut-ref="p1" /> &lt;!&ndash;前置通知&ndash;&gt;
            <aop:after-returning method="commitTransaction" pointcut-ref="p1"/> &lt;!&ndash;后置通知&ndash;&gt;
        </aop:aspect>
    </aop:config>

&lt;!&ndash;    <context:annotation-config />&ndash;&gt;
&lt;!&ndash;    &ndash;&gt;
    <bean id="school" class="com.cxx.example.kimmking.spring02.School"></bean>
    -->
    
</beans>